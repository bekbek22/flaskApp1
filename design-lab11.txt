Create a class call "BlogEntry" using an SQLAlchemy db.model base class.
=======================
name 50 char
message 280 char
email 50 char
=======================
date_created : Server's time in the local time zone when the post is created
date_updated : Server's time in the local time zone when the post is updated
Find out yourself how to store date/time on the database
=======================
tablename = "blog_entries" is created on the database when server starts. เติม  your table with at least 1 seed entry
=======================
Use the UL from lab11_microblog.html and make it postable. You can modify but keep it professional
=======================
****your UI should display all the field from above (3.1 - 3.5)
=======================
Function requirements :
-The app will store the entries on the data base ******
-You can add all necessary (จำเป็น) fields to the form
-Since the name and email is quite static (ค่อนค้างคงที่) 
-Make sure all the CRUD operations are supported
  -For simplicity in the delete operation you will just delete it from the database like "Lab10" But in real-life
   practice, you might want to set a flag with a name like "is_deleted" to filter out the entry when querying
   So that you can always have access to the deleted entries.
-The lastest post should be at the top ********
-You can combine server-side and client-side rendering and AJAX calls to make everything happens *****
=======================
-Make routing to the file under "/lab11" in views.py
=======================
-Commit it to your "flaskApp1" repo by 23.59 on Monday, Feb 20
-Ensure the instructors(s) can access your flaskApp1 PRIVATE repo
-You can add more functions for extra credits

	